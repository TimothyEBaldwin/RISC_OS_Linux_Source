/* -*-C-*-
 *
 * $Header: /cvsroot/mixed/RiscOS/Sources/Lib/TCPIPLibs/inetlib/c/getprent,v 4.2 2018/08/25 19:53:56 rool Exp $
 * $Source: /cvsroot/mixed/RiscOS/Sources/Lib/TCPIPLibs/inetlib/c/getprent,v $
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.3  96/04/01  10:20:47  kbracey
 * Patched to know about TCP and UDP in the absence of a protocols file.
 *
 * Revision 1.2  95/04/20  12:39:44  kwelton
 * All library functions are now prototyped in inetlib.h.
 *
 * Revision 1.1	 95/04/18  16:47:52  kwelton
 * Initial revision
 *
 */
/*
 * Copyright (c) 1983 Regents of the University of California.
 * All rights reserved.	 The Berkeley software License Agreement
 * specifies the terms and conditions for redistribution.
 */

#if defined(LIBC_SCCS) && !defined(lint)
static char sccsid[] = "@(#)getprotoent.c	5.3 (Berkeley) 5/19/86";
#endif /* LIBC_SCCS and not lint */

#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>

#include "sys/types.h"
#include "sys/socket.h"
#include "netdb.h"

#include "inetlib.h"

#define MAXALIASES	35
#define LBUFSIZ		255

static const char PROTODB[] = "InetDBase:Protocols";

static FILE *protof = NULL;
static char line[LBUFSIZ+1];
static struct protoent proto;
static char *proto_aliases[MAXALIASES];
static char *any(char *, char *);
static int dummy_stage;

int _proto_stayopen = 0;

void setprotoent(int f)
{
	if (protof == NULL)
		protof = fopen(PROTODB, "r" );
	else
		rewind(protof);
	_proto_stayopen |= f;

	dummy_stage=0;
}

void endprotoent(void)
{
	if (protof) {
		fclose(protof);
		protof = NULL;
	}
	_proto_stayopen = 0;
	dummy_stage = 0;
}

struct protoent *getprotoent(void)
{
	char *p;
	char *cp, **q;

	if (protof == NULL && (protof = fopen(PROTODB, "r" )) == NULL)
	{
	    /* Right, we don't have a protocols file - do something sensible */
	    if (dummy_stage == 0)
	    {
	        strcpy(line, "udp\t17\tUDP\n");
	        dummy_stage++;
	        p=line;
	        goto fake;
	    }
	    else if (dummy_stage == 1)
	    {
	        strcpy(line, "tcp\t6\tTCP\n");
	        dummy_stage++;
	        p=line;
	        goto fake;
	    }

	    /* sent the two dummy entries - return now */
	    return (NULL);
	}

again:
	if ((p = fgets(line, LBUFSIZ, protof)) == NULL)
		return (NULL);
fake:
	if (*p == '#')
		goto again;
	cp = any(p, "#\n");
	if (cp == NULL)
		goto again;
	*cp = '\0';
	proto.p_name = p;
	cp = any(p, " \t");
	if (cp == NULL)
		goto again;
	*cp++ = '\0';
	while (*cp == ' ' || *cp == '\t')
		cp++;
	p = any(cp, " \t");
	if (p != NULL)
		*p++ = '\0';
	proto.p_proto = atoi(cp);
	q = proto.p_aliases = proto_aliases;
	if (p != NULL) {
		cp = p;
		while (cp && *cp) {
			if (*cp == ' ' || *cp == '\t') {
				cp++;
				continue;
			}
			if (q < &proto_aliases[MAXALIASES - 1])
				*q++ = cp;
			cp = any(cp, " \t");
			if (cp != NULL)
				*cp++ = '\0';
		}
	}
	*q = NULL;
	return (&proto);
}

static char *any(char *cp, char *match)
{
	char *mp, c;

	while (c = *cp) {
		for (mp = match; *mp; mp++)
			if (*mp == c)
				return (cp);
		cp++;
	}
	return ((char *)0);
}

/* EOF getprent.c */
