/*
 * Copyright (c) 2015, Timothy Baldwin
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */

#include <stdio.h>
#include <stdarg.h>
#include <kernel.h>
#include <string.h>

#include "Global/Services.h"
#include "IXSupportHdr.h"
#include <syscalls.h>

static const uint32_t bad[] = {
  0x65675f5f, 0x70635f74, 0x72615f75,
  0x00006863, 0xff000010, 0xe92d4000,
  0xe10f1000, 0xef020016, 0x63e00000,
  0x7e100f10, 0xe121f001
};

static const uint32_t good[] = {
  0xE3A00000,
  0xE1A0F00E
};

void sc_handler(int service_number, _kernel_swi_regs *r, void *pw) {
  (void)pw;
  if (service_number == Service_UKCompression) {
    uint32_t *p = (uint32_t *)r->r[2];
    if (p[4] == 0xEF000011)
      for (int size = p[5]; size >= sizeof(bad); ++p, size -= 4)
        if (memcmp(bad, p, sizeof(bad)) == 0)
          memcpy(p + 5, good, sizeof(good));
  }
}
