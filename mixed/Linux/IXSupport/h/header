/*
 * Copyright (c) 2015 - 2018, Timothy Baldwin
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of RISC OS Open Ltd nor the names of its contributors
 *       may be used to endorse or promote products derived from this software
 *       without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */

#include "IXSupportHdr.h"

#define ix_SYSCALL_branch 1
#include "ix/syscalls.h"

#include <stdbool.h>

#define XOS_FSControl 0x20029

// Special field syntax

// C - case sensitive

// 0 R - raw mode
// 1 P - Never write suffixes
// 2   - Write suffixes if can not write extended attributes
// 3 W - Write suffixes even if can write extended attributes
// 4 X - Don't read extended attributes

struct special_field {
  unsigned symlinks;
  bool case_sensitive;
  uint8_t suffix, nomime;
};

struct path_data {
  int fd;
  int dir_fd;
  int filetype;
  struct special_field sf;
  char name[ix_PATH_MAX];
};

extern struct path_data pd1, pd2;

extern _kernel_oserror *convert_error(int r);
extern void eprintf(const char *fmt, ...);
extern char dirname[1024];
extern _kernel_oserror * const error_table[];
