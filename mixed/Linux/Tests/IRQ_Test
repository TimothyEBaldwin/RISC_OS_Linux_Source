DIM test%(2), code% 256
FOR opt%=0 TO 2 STEP 2
P%=code%
[opt opt%

.test%(0)
push    {lr}

bl      fiddle_pipe%
mov     r0, #0
bl      check_flag%

swi     "OS_IntOn"
mov     r0, #1
bl      check_flag%

bl      fiddle_pipe%
mov     r0, #2
bl      check_flag%

swi     "OS_IntOn"
mov     r0, #2
bl      check_flag%

pop     {pc}

.test%(1)
push    {lr}
setend  be
bl      test%(0)
setend  le
pop     {pc}


.fiddle_pipe%
push    {r0-r2,r7,lr}
ldrb    r0, pipes% + 4
sub     r1, sp, #4
mov     r2, #4
mov     r7, #4
bl      syscall%
ldrb    r0, pipes%
mov     r7, #3
bl      syscall%
pop     {r0-r2,r7,pc}

.check_flag%
ldrb    r1, flag%
teq     r0, r1
strne   r0, [r5]
mov     pc, lr

.pipes%
dcd 0
dcd 0

.flag%
dcd 0

.syscall%
mov     pc, r5

.irq_routine%
push    {r0-r3, r8, r9, r12, lr}
mov     r8, #0
mov     r9, #3
swi     "OS_Hardware"
ldrb    r0, flag%
add     r0, r0, #1
strb    r0, flag%
pop     {r0-r3, r8, r9, r12, pc}

]
NEXT

REM Find system call address
SYS "OS_Hardware",&30A,,,,,,,,5 TO ,,psr%
F%=psr%!76

REM Open pipe
H%=42:A%=pipes%:CALL F%
SYS "OS_ClaimDeviceVector", !pipes%, irq_routine%
SYS "OS_Hardware", !pipes%,,,,,,,,0,1

FOR C%=0 TO 1
PRINT "Test ";C%
SYS "OS_IntOff"
!flag% = 0
CALL test%(C%)
NEXT

REM Close pipe
SYS "OS_ReleaseDeviceVector", !pipes%, irq_routine%
H%=6
A%=pipes%!0:CALL F%
A%=pipes%!4:CALL F%
