#!/bin/bash
#
# Copyright (c) 2018, Timothy Baldwin
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#     * Redistributions of source code must retain the above copyright
#       notice, this list of conditions and the following disclaimer.
#     * Redistributions in binary form must reproduce the above copyright
#       notice, this list of conditions and the following disclaimer in the
#       documentation and/or other materials provided with the distribution.
#     * Neither the name of RISC OS Open Ltd nor the names of its contributors
#       may be used to endorse or promote products derived from this software
#       without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

set -e
set -x

: ${RISC_OS__OpenTerm:=0}

term=
choose_term() {
  for term in xterm x-terminal-emulator konsole gnome-terminal mate-terminal
  do
    if command -v $term 2>/dev/null; then
      return 0
    fi
  done
  return 1
}

if [[ -r config ]]; then
  . config
fi

if [[ $RISC_OS__OpenTerm -gt 0 ]]; then
  exec >/dev/null </dev/null
  exec 2> >(cat >&2)
fi

if ! make -f Support/common.mk INSECURE="$RISC_OS__INSECURE" --question script-all; then
  if [[ $RISC_OS__OpenTerm -gt 0 ]]; then
    choose_term
    term="$term -e"
  fi
  mkdir -p Built
  $term flock Built -c 'make -f Support/common.mk INSECURE="$RISC_OS__INSECURE" -j$(getconf _NPROCESSORS_ONLN) script-all 2>&1 | tee Built/build_log'
fi

# Remove any filetype extension from CMOS file
! mv 'HardDisc4/!Boot/CMOS',??? 'HardDisc4/!Boot/CMOS' 2>/dev/null

: ${RISC_OS_Alias_IXFSBoot:='/<IXFS$HardDisc4>.!Boot'}

launch_RISC_OS() {
  while
    . Built/qemu_sandbox
    if [[ "$RISC_OS__INSECURE" == "YES" ]]; then
      RISC_OS_IXFS_HardDisc4='IXFS:$.dev.fd.5.HardDisc4' Built/wrapper ./RISC_OS --nofork --nvram 'HardDisc4/!Boot/CMOS' 5<.
    else
      RISC_OS_IXFS_HardDisc4='IXFS:$.HardDisc4' Built/wrapper bwrap --seccomp 9 9< <(Built/gen_seccomp) --unshare-all --tmpfs / --dir /tmp --file 8 /WARNING --proc /proc --dev /dev \
      $QEMU_sandbox \
      --ro-bind RISC_OS /RISC_OS \
      --bind HardDisc4 /HardDisc4 --chdir / \
      $RISC_OS__BWARP_EXTRA \
      $QEMU /RISC_OS --nofork --nvram '/HardDisc4/!Boot/CMOS' 8<<END
This directory (except HardDisc4) is volatile, all files
will be deleted at the end of the RISC OS Session.
END
    fi
    [[ $? -eq 100 ]]
  do
    echo
  done
}

export -f launch_RISC_OS
export RISC_OS_Alias_IXFSBoot RISC_OS__INSECURE RISC_OS__BWARP_EXTRA RISC_OS__OpenTerm

exec ${RISC_OS__GUI:=Built/sdl} bash -x -c launch_RISC_OS
