From 10fd2a8d6b49decb38cd4e82098ad6579c3f7f71 Mon Sep 17 00:00:00 2001
From: Timothy E Baldwin <T.E.Baldwin99@members.leeds.ac.uk>
Date: Sun, 4 Sep 2016 02:55:53 +0100
Subject: [PATCH] linux-user: SWI Intercept and disable FPA (for RISC OS)

---
 linux-user/main.c | 16 ++++++++++++++--
 1 file changed, 14 insertions(+), 2 deletions(-)

diff --git a/linux-user/main.c b/linux-user/main.c
index 75b199f274..0352589090 100644
--- a/linux-user/main.c
+++ b/linux-user/main.c
@@ -555,6 +555,10 @@ do_kernel_trap(CPUARMState *env)

 void cpu_loop(CPUARMState *env)
 {
+    static bool use_nwfpe = true;
+    static abi_ulong sys_base = 0;
+    static abi_ulong sys_limit = 0xFFFFFFFF;
+
     CPUState *cs = CPU(arm_env_get_cpu(env));
     int trapnr;
     unsigned int n, insn;
@@ -580,7 +584,7 @@ void cpu_loop(CPUARMState *env)
                 /* FIXME - what to do if get_user() fails? */
                 get_user_code_u32(opcode, env->regs[15], env);

-                rc = EmulateAll(opcode, &ts->fpa, env);
+                rc = use_nwfpe && EmulateAll(opcode, &ts->fpa, env);
                 if (rc == 0) { /* illegal instruction */
                     info.si_signo = TARGET_SIGILL;
                     info.si_errno = 0;
@@ -669,7 +673,10 @@ void cpu_loop(CPUARMState *env)
                     }
                 }

-                if (n == ARM_NR_cacheflush) {
+                if (env->regs[15] < sys_base || env->regs[15] > sys_limit) {
+                    info.si_signo = TARGET_SIGSYS;
+                    queue_signal(env, info.si_signo, QEMU_SI_FAULT, &info);
+                } else if (n == ARM_NR_cacheflush) {
                     /* nop */
                 } else if (n == ARM_NR_semihosting
                            || n == ARM_NR_thumb_semihosting) {
@@ -716,6 +723,11 @@ void cpu_loop(CPUARMState *env)
                             env->regs[0] = ret;
                         }
                     }
+                } else if (n == 0xC0001) {
+                    /* RISC OS: Control SWI Intercept and FPA */
+                    sys_base = env->regs[0];
+                    sys_limit = env->regs[1];
+                    use_nwfpe = env->regs[2];
                 } else {
                     goto error;
                 }
--
2.11.0
