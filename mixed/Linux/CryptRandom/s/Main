;
; Copyright (c) 2018, Timothy Baldwin
; All rights reserved.
;
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met:
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
;
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:Machine.<Machine>
        GET     Hdr:ModHand
	GET	Hdr:LinuxSyscalls

	AREA    |!!Module$$Code|, CODE, READONLY
module
	DCD	0
	DCD	init - module
	DCD	final - module
	DCD	0
	DCD	title - module
	DCD	help - module
	DCD	0
	DCD	0x51980
	DCD	swi - module
	DCD	swi_table - module
	DCD	0
	DCD	0
	DCD	flags - module

        PVOpsImports

title	DCB	"CryptRandom",0
help	DCB	"CryptRandom",9,"0.14 (08 Jan 2018) Linux dummy edition",0
swi_table
	DCB	"CryptRandom",0
	DCB	"Byte",0
	DCB     "Stir",0
	DCB     "AddNoise",0
	DCB     "Block",0
	DCB     "Word",0
	DCB     0
	ALIGN

flags	DCD	ModuleFlag_32bit

init	MOV	r0, #-1
	STR	r0, [r12]
	myBX	lr

final	LDR	r0, [r12]
	CMP	r0, #-1
	myBXEQ	lr
	STMFD	sp!, {r7, lr}
	MOV	r7, #__NR_close
	BL	__HAL_LinuxSyscall
	CLRV
	LDMFD	sp!, {r7, pc}


swi	STMFD	sp!, {r0-r4, r7, lr}
        CMP     r11, #(%FT20 - %FT10) / 4
        ADDLO   pc, pc, r11, lsl #2
        B       bad_swi
10      B       byte
	B	okay_out
	B	okay_out
        B       block
        B       word
20

byte	MOV	r0, #0
	STR	r0, [sp]
	MOV	r3, sp
	MOV	r1, #1
	B	read_block

word	MOV	r3, sp
	MOV	r1, #4
	B	read_block

block	MOV	r3, r0
read_block
	LDR	r0, [r12]
	CMP	r0, #-1
	BNE	use_file
	MOV	r0, r3
	MOV	r2, #0
	LDR	r7, =__NR_getrandom
	BL	__HAL_LinuxSyscall
	CMP	r0, #0
	BLT	bad_sys
	ADD	r3, r3, r0
	SUBS	r1, r1, r0
	BNE	read_block
okay_out
	CLRV
        LDMFD	sp!, {r0-r4, r7, pc}


bad_sys
	MOV	r4, r1
	ADR	r0, filename
	MOV	r1, #0
	MOV	r2, #0
	MOV	r7, #__NR_open
	BL	__HAL_LinuxSyscall
	CMP	r0, #0
	BLT	very_bad_sys
	STR	r0, [r12]
	MOV	r1, r4

use_file
	MOV	r2, r1
	MOV	r1, r3
use_file_loop
	MOV	r7, #__NR_read
	BL	__HAL_LinuxSyscall
	CMP	r0, #0
	BLT	very_bad_sys
	ADD	r1, r1, r0
	SUBS 	r2, r2, r0
        LDRNE	r0, [r12]
	BNE	use_file_loop
	CLRV
        LDMFD	sp!, {r0-r4, r7, pc}

very_bad_sys
	UND

bad_swi
	ADR 	r0, bad_swi_error
	SETV
	ADD	sp, sp, #4
        LDMFD	sp!, {r1-r4, r7, pc}

bad_swi_error
        DCD     0x1E6
        DCB     "SWI not implemented by Linux CryptRandom", 0

filename
	DCB	"/dev/urandom", 0

	END
