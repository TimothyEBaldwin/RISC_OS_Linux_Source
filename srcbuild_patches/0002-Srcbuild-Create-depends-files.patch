From 233eef7966f4577dcbeff90f7fc0ba1e272eacdf Mon Sep 17 00:00:00 2001
From: Timothy E Baldwin <T.E.Baldwin99@members.leeds.ac.uk>
Date: Wed, 22 Feb 2017 20:28:53 +0000
Subject: [PATCH 2/5] Srcbuild: Create depends files

---
 castle/RiscOS/Utilities/Release/srcbuild/c/build | 26 +++++++++++++++++++++++-
 1 file changed, 25 insertions(+), 1 deletion(-)

diff --git a/castle/RiscOS/Utilities/Release/srcbuild/c/build b/castle/RiscOS/Utilities/Release/srcbuild/c/build
index 1e95b610..603de7b5 100644
--- a/castle/RiscOS/Utilities/Release/srcbuild/c/build
+++ b/castle/RiscOS/Utilities/Release/srcbuild/c/build
@@ -174,14 +174,37 @@ static int build_select_module_directory(component_entry_t *component, module_en
 {
   int result;
   char buffer[BUFFER_LEN];
+  FILE *depends;
 
   sb_printf("\n%s (%s)...\n", component->name, module->path);
   sb_buildfilename(BUFFER_LEN, buffer, build_dir, module->path, NULL);
   result = sb_chdir(buffer);
   if (result) {
     error(0, "cannot locate '%s'", buffer);
+    return 0;
   }
-  return !result;
+
+  depends = fopen("Depends", "a");
+  if (!depends) {
+    error(0, "error opening '%s.Depends'", buffer);
+    return 0;
+  }
+
+  if (ftell(depends) == 0) {
+    /* Empty, so write the magic comment. */
+    if (fputs("# Dynamic dependencies:\n", depends) == EOF) {
+      error(0, "error writing to '%s.Depends'", buffer);
+      fclose(depends);
+      return 0;
+    }
+  }
+
+  if (fclose(depends)) {
+    error(0, "error closing '%s.Depends'", buffer);
+    return 0;
+  }
+
+  return 1;
 }
 
 
@@ -457,6 +480,7 @@ int build_clean_all(void)
                   error(0, "running make clean_all on module '%s'.", component->name);
           if (sb_system("stripdepnd") != 0)
                   error(0, "running stripdepnd on module '%s'.", component->name);
+          remove("Depends");
         }
   	/*
   	 * no need for force clean now
-- 
2.11.0

