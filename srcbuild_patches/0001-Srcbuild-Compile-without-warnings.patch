From 7f139ca3c04d413174d24bcff32bafe426bcdbc1 Mon Sep 17 00:00:00 2001
From: Timothy E Baldwin <T.E.Baldwin99@members.leeds.ac.uk>
Date: Fri, 24 Feb 2017 11:48:28 +0000
Subject: [PATCH 1/5] Srcbuild: Compile without warnings

# Conflicts:
#	castle/RiscOS/Utilities/Release/srcbuild/c/riscos
---
 castle/RiscOS/Utilities/Release/srcbuild/c/build   | 10 +++-----
 castle/RiscOS/Utilities/Release/srcbuild/c/parse   |  2 ++
 castle/RiscOS/Utilities/Release/srcbuild/c/riscos  |  2 +-
 .../RiscOS/Utilities/Release/srcbuild/c/srcbuild   | 29 +++++++++++-----------
 .../RiscOS/Utilities/Release/srcbuild/h/srcbuild   |  1 +
 5 files changed, 22 insertions(+), 22 deletions(-)

diff --git a/castle/RiscOS/Utilities/Release/srcbuild/c/build b/castle/RiscOS/Utilities/Release/srcbuild/c/build
index df72daeb..1e95b610 100644
--- a/castle/RiscOS/Utilities/Release/srcbuild/c/build
+++ b/castle/RiscOS/Utilities/Release/srcbuild/c/build
@@ -57,6 +57,7 @@
 #include "srcbuild.h"
 #include "parse.h"
 #include "riscos.h"
+#include "build.h"
 
 /* Some bits for command line options which set environment variables */
 #define ENVVAR_BUF_LEN 32
@@ -98,9 +99,6 @@ typedef enum {
 /* Internal function invoked by build_install, build_bbe and the joiners (if install_rom phase wasn't run) */
 static int build_install_rom_(build_install_rom_reason_code);
 
-/* Internal function invoked by build_resources and build_bbe */
-static int build_resources_(build_resources_reason_code);
-
 /* Some string handling functions */
 unsigned int strcasecmp(const char *xs, const char *ys);
 const char *strstr_ci(const char *source, const char *substr);
@@ -870,8 +868,8 @@ int build_bbe(void)
   char bbe_dir[BUFFER_LEN];
   char aof_target[BUFFER_LEN];
   char rom_link_name[BUFFER_LEN];
-  char *end_bbe_dir;
-  char *end_rom_link_name;
+  char *end_bbe_dir = 0;
+  char *end_rom_link_name = 0;
   int  rom_link_line_by_line;
   module_type_t type;
   FILE *makefile;
@@ -2200,7 +2198,7 @@ const char *strstr_ci(const char *source, const char *substr)
  *   return a pointer to the start of the last matching substring or NULL if
  *   no matches were found.
  */
-const char *last_strstr_ci(const char *source, const char *substr)
+static const char *last_strstr_ci(const char *source, const char *substr)
 {
   const char *sub = NULL;
   const char *nxt = strstr_ci(source, substr);
diff --git a/castle/RiscOS/Utilities/Release/srcbuild/c/parse b/castle/RiscOS/Utilities/Release/srcbuild/c/parse
index c6657e53..4934a21d 100644
--- a/castle/RiscOS/Utilities/Release/srcbuild/c/parse
+++ b/castle/RiscOS/Utilities/Release/srcbuild/c/parse
@@ -31,6 +31,7 @@
 
 #include "srcbuild.h"
 #include "riscos.h"
+#include "parse.h"
 
 /* Function to compare two strings case insensitively
  *
@@ -157,6 +158,7 @@ char *parse_territory_entry(char *territory)
     }
     else {
       error(1, "Badly formed territory declaration: %s=%s", territory, sep);
+      return 0;
     }
 
     sprintf(varname, "%s%ld", TERR_NAME_PFX, terr_num);
diff --git a/castle/RiscOS/Utilities/Release/srcbuild/c/riscos b/castle/RiscOS/Utilities/Release/srcbuild/c/riscos
index 00396b74..a2b8d54e 100644
--- a/castle/RiscOS/Utilities/Release/srcbuild/c/riscos
+++ b/castle/RiscOS/Utilities/Release/srcbuild/c/riscos
@@ -54,7 +54,7 @@
 /*
  * globals
  */
-int spooling = FALSE;
+static int spooling = FALSE;
 
 
 #ifdef RISCOS
diff --git a/castle/RiscOS/Utilities/Release/srcbuild/c/srcbuild b/castle/RiscOS/Utilities/Release/srcbuild/c/srcbuild
index d3210a98..5b62b3ee 100644
--- a/castle/RiscOS/Utilities/Release/srcbuild/c/srcbuild
+++ b/castle/RiscOS/Utilities/Release/srcbuild/c/srcbuild
@@ -60,7 +60,6 @@ char *messages_filename = NULL;
 char *joiner = NULL;
 char *joiner_format = NULL;
 char *image_size = NULL;
-char *territories = NULL;
 podule_info_t podule_info =
 {NULL, NULL, NULL, NULL, NULL, NULL, NULL};
 char *sigstr = NULL;
@@ -71,7 +70,7 @@ char *image_type_names[] = {
   "rom", "exprom", "extrom", "other"
 };
 int verbose = FALSE;
-int strict = FALSE;
+static int strict = FALSE;
 
 #define MAX_JOIN_ENTRIES 256
 HashTable join_db;
@@ -89,9 +88,9 @@ unsigned int num_of_territories = 0;
 
 /* Create some linked lists... */
 module_entry_t *module_database = NULL;
-component_entry_t *component_database = NULL;     /* Pointer to list head */
-component_entry_t *component_database_end = NULL; /* Pointer to list tail */
-error_entry_t *error_database = NULL;
+component_entry_t *component_database = NULL;            /* Pointer to list head */
+static component_entry_t *component_database_end = NULL; /* Pointer to list tail */
+static error_entry_t *error_database = NULL;
 
 static const action_t action_tbl[] =
 {
@@ -121,7 +120,7 @@ static void show_phases_csv(void)
 /*
  * Set the system variables as appropriate on program finalisation.
  */
-void set_sys_vars(int success)
+static void set_sys_vars(int success)
 {
 #ifdef RISCOS
   char buffer[BUFFER_LEN];
@@ -272,7 +271,7 @@ static void srcbuild_rewrite_path_in_host_syntax(char **path)
 /*
  * read the database into a linked list of records.
  */
-int
+static int
 read_module_database(void)
 {
   FILE *file = NULL;
@@ -354,7 +353,7 @@ read_module_database(void)
 /*
  * read the shadow components file
  */
-int
+static int
 read_shadow_component_database(char *filename)
 {
   FILE *file;
@@ -429,7 +428,7 @@ read_shadow_component_database(char *filename)
         /* mark the module for not needing clean */
         if (!component->always_clean && switch_same && options_same)
           component->force_clean = FALSE;
-          
+
         /* If there were options, and now there are none, we must clean */
         if (!component->options && options)
           component->force_clean = TRUE;
@@ -741,7 +740,7 @@ exit_gracefully:
  * make sure the force_clean flag hasn't been cleared for any
  * component which had -clean specified in the components file
  */
-void
+static void
 update_force_clean_states(void)
 {
   component_entry_t *entry = component_database;
@@ -756,7 +755,7 @@ update_force_clean_states(void)
 /*
  * free up any mallocs
  */
-void
+static void
 release_module_database(void)
 {
   module_entry_t *entry, *this;
@@ -792,7 +791,7 @@ release_component(component_entry_t * entry)
     free(entry->install);
 }
 
-void
+static void
 release_component_database(void)
 {
   component_entry_t *entry, *this;
@@ -806,7 +805,7 @@ release_component_database(void)
   }
 }
 
-void
+static void
 release_error_database(void)
 {
   error_entry_t *entry, *this;
@@ -836,7 +835,7 @@ banner(char c)
 /*
  * display usage info
  */
-void
+static void
 usage(void)
 {
   const action_t *action;
@@ -858,7 +857,7 @@ usage(void)
 /*
  * tidy up before quiting
  */
-void
+static void
 doexit(void)
 {
   error_entry_t *entry;
diff --git a/castle/RiscOS/Utilities/Release/srcbuild/h/srcbuild b/castle/RiscOS/Utilities/Release/srcbuild/h/srcbuild
index 4dd0c67d..0c43c883 100644
--- a/castle/RiscOS/Utilities/Release/srcbuild/h/srcbuild
+++ b/castle/RiscOS/Utilities/Release/srcbuild/h/srcbuild
@@ -190,6 +190,7 @@ component_entry_t *lookup_component(char *name);
 /*
  * global variables
  */
+extern char progname[32]; /* Magic number required by CLX library */
 extern char *module_type_names[];
 extern char *image_type_names[];
 extern char *build_name;
-- 
2.11.0

