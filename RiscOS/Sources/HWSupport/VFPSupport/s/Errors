; 
; Copyright (c) 2010, RISC OS Open Ltd
; All rights reserved.
; 
; Redistribution and use in source and binary forms, with or without
; modification, are permitted provided that the following conditions are met: 
;     * Redistributions of source code must retain the above copyright
;       notice, this list of conditions and the following disclaimer.
;     * Redistributions in binary form must reproduce the above copyright
;       notice, this list of conditions and the following disclaimer in the
;       documentation and/or other materials provided with the distribution.
;     * Neither the name of RISC OS Open Ltd nor the names of its contributors
;       may be used to endorse or promote products derived from this software
;       without specific prior written permission.
; 
; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
; IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
; ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
; LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; POSSIBILITY OF SUCH DAMAGE.
; 

; VFPSupport errors

        MakeInternatErrorBlock  VFPSupport_IO,,IO
        MakeInternatErrorBlock  VFPSupport_DZ,,DZ
        MakeInternatErrorBlock  VFPSupport_OF,,OF
        MakeInternatErrorBlock  VFPSupport_UF,,UF
        MakeInternatErrorBlock  VFPSupport_IX,,IX
        MakeInternatErrorBlock  VFPSupport_ID,,ID

        MakeInternatErrorBlock  VFPSupport_NoHW,,E00
        MakeInternatErrorBlock  VFPSupport_BadHW,,E01
        MakeInternatErrorBlock  VFPSupport_FeatureUnavailable,,E02
        MakeInternatErrorBlock  VFPSupport_BadContext,,E03
        MakeInternatErrorBlock  VFPSupport_BadFeature,,E04
;        MakeInternatErrorBlock  VFPSupport_NoHW2,,E05 - not used internally
        MakeInternatErrorBlock  VFPSupport_Instanced,,E06
        MakeInternatErrorBlock  VFPSupport_BadFlags,,E07

        EXPORT  RaiseException
RaiseException
        ; Raise an exception from the elementary library functions
        ; These are different to the softfloat library in that they aren't called
        ; from an exception, they were called as APCS compliant functions in the
        ; foreground.
        FMRX    r3, FPSCR
        AND     r0, r0, #&FF            ; Constrain cumulative bits
        ORR     r3, r3, r0              ; Mix them in
        FMXR    FPSCR, r3
        TST     r0, r3, LSR #8          ; See if a cumulative bit is also exception throwing
        BXEQ    lr
        ; We'll need R12 back, though APCS has probably junked it, but as exceptions
        ; are exceptional (!) a slow module name lookup doesn't hurt.
        Push    "r4-r6, lr"
        MOV     r6, r0
        MOV     r0, #ModHandReason_LookupName
        ADRL    r1, ModuleTitle
        SWI     XOS_Module              ; Not expecting any trouble
        MOV     wp, r4
        ; Cause an actual error
        TST     r6, #FPSCR_IOC
        ADRNE   r0, ErrorBlock_VFPSupport_IO
        TST     r6, #FPSCR_DZC
        ADRNE   r0, ErrorBlock_VFPSupport_DZ
        TST     r6, #FPSCR_OFC
        ADRNE   r0, ErrorBlock_VFPSupport_OF
        TST     r6, #FPSCR_UFC
        ADRNE   r0, ErrorBlock_VFPSupport_UF
        TST     r6, #FPSCR_IXC
        ADRNE   r0, ErrorBlock_VFPSupport_IX
        TST     r6, #FPSCR_IDC
        ADRNE   r0, ErrorBlock_VFPSupport_ID
        BL      ReturnError_LR
        Pull    "r4-r6, lr"
        SWI     OS_GenerateError

        END
