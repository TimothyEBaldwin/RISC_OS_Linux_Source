/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* -*-C-*-
 *
 * Copyright (c) 1995 Acorn Computers Ltd., Cambridge, England
 *
 * :RCS Log discontinued:
 * Revision 1.1  95/04/20  09:50:19  kwelton
 * Initial revision
 *
 */
#include "sys/types.h"
#include "netdb.h"
#include "unixlib.h"

void herror(const char *c)
{
    if (c && *c) fprintf(stderr, "%s: \n", c);
    fprintf(stderr, hstrerror(h_errno));
}

const char *hstrerror(int err)
{
    static const char *const h_errlist[] = {
        "Resolver Error 0 (no error)",    /* NETDB_SUCCESS */
        "Unknown host",                   /* HOST_NOT_FOUND */
        "Host name lookup failure",       /* TRY_AGAIN */
        "Unknown server error",           /* NO_RECOVERY */
        "No address associated with name" /* NO_DATA */
    };
#define N_H_ERRS (sizeof(h_errlist) / sizeof(h_errlist[0]))

    if (err < 0) return "Resolver internal error";
    if (err >= N_H_ERRS) return "Unknown resolver error";
    return h_errlist[err];
}

/* EOF herror.c */
