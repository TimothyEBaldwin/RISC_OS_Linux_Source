/* Copyright 1997 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#include <string.h>
#include <sys/types.h>
#include <kvm.h>

#include "unixlib.h"

kvm_t *
kvm_open(uf, mf, sf, flag, errout)
	const char *uf;
	const char *mf;
	const char *sf;
	int flag;
	const char *errout;
{
	/* Shut up compiler */
	uf = uf; mf = mf; sf = sf; flag = flag; errout = errout;

	return (kvm_t *)0xF0000000;
}

kvm_t *
kvm_openfiles(uf, mf, sf, flag, errout)
	const char *uf;
	const char *mf;
	const char *sf;
	int flag;
	char *errout;
{
	uf = uf; mf = mf; sf = sf; flag = flag; errout = errout;

        return kvm_open(uf, mf, sf, flag, (const char *) errout);
}

int
kvm_close(kd)
	kvm_t *kd;
{
	kd = kd;

	return (0);
}

ssize_t
kvm_read(kd, kva, buf, len)
	kvm_t *kd;
	register u_long kva;
	register void *buf;
	register size_t len;
{
	kd = kd;

	memcpy(buf, (void *) kva, len);

	return (len);
}

uint64_t
kvm_counter_u64_fetch(kd, base)
	kvm_t *kd;
	u_long base;
{
	kd = kd;

	return *(uint64_t *)base;
}

char *
kvm_geterr(kd)
	kvm_t *kd;
{
	kd = kd;

	return ("");
}
