stdatomic test/benchmark code

This test code can be built to either test stdatomic.h directly (i.e. test the running CLib module), or to test CLib's source code (by directly including the implementation). Switching between the two requires editing the makefile.

Note: Currently the only way to test the source code is to compile using an older version of the CLib stubs which don't include the _kernel_atomic functions (otherwise the functions will clash)

The *AtomicTest command runs some basic unit tests to verify functionality.

The *AtomicBench command runs benchmarks, producing CSV output comparing the performance of the stdatomic code against the equivalent non-atomic operations. Figures are in ops per second, with the non-atomic ("noatomic") figure in the first column and the stdatomic figure in the second column.

The tests/benchmarks can run in usermode, privileged mode, or both:

  The 'u' flag runs the code in usermode
  The 'p' flag runs the code in SVC mode
  The 'm' flag controls the behaviour of the usermode code, when the stdatomic implementation has been directly included:
    - With the 'm' flag specified, the usermode test will run as if it were a module client of CLib
    - With the 'm' flag absent, the usermode test will run as if it were an application client of CLib

Note: when testing the running CLib module, behaviour will always be as if the 'm' flag was specified. However, atomic1.c and bench.c can each be individually compiled as applications, to allow testing of CLib application clients.
