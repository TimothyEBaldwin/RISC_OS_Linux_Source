stdatomic test/benchmark code

This test code can be built to either test stdatomic.h directly (i.e. test the running CLib module), or to test CLib's source code (by directly including the implementation). Switching between the two requires editing the makefile.

Note: Currently the only way to test the source code is to compile using an older version of the CLib stubs which don't include the _kernel_atomic functions (otherwise the functions will clash)

The *AtomicTest command runs some basic unit tests to verify functionality.

The *AtomicBench command runs benchmarks, producing CSV output comparing the performance of the stdatomic code against the equivalent non-atomic operations. Figures are in ops per second, with the non-atomic ("noatomic") figure in the first column and the stdatomic figure in the second column.

The tests/benchmarks can run in usermode, privileged mode, or both, by specifying the appropriate flags on the command line:

  The 'u' flag runs the code in usermode
  The 'p' flag runs the code in SVC mode

If the stdatomic implementation has been directly included, you can also use the 'n' flag to request that the unsafe versions of the routines should be used (equivalent to if the _kernel_INITFLAG_UNSAFE_ATOMICS flag had been set)

atomic1.c and bench.c can also be individually compiled as applications. They both accept the 'n' flag, and bench.c accepts a 'c' flag for CSV or plain output.