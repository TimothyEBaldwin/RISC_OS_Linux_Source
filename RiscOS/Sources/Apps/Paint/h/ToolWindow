/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#ifndef toolwindow_H
#define toolwindow_H

/* > h.ToolWindow
 */

typedef
  /*procedures to call to work a "tool" that operates on a sprite */
  struct toolwindow_block
  { void (*click_action)  (main_window *, wimp_mousestr *);
    void (*null_action)   (main_window *, wimp_mousestr *);
    void (*redraw_action) (main_window *, int, int);
    void (*stop_action)   (main_sprite *);
    char *description;
  }
  toolwindow_block;

extern toolwindow_block *toolwindow_current_tool;

extern int toolwindow_current_mode;

extern wimp_w toolwindow_handle;

extern wimp_w tools_brushpane_handle;

extern void toolwindow_display (int);

extern void toolwindow_init (void);

extern void toolwindow_stop_all_tools (void);

extern void toolwindow_close (void);

extern void toolwindow_brush_check_deletion (main_sprite *);

extern void toolwindow_brush_check_rename (main_sprite *, char *);

extern void toolwindow_readbrushscale (void);

extern void toolwindow_readbrushmode (void);

extern void performbrushGOaction (void);

extern void toolwindow_brush_pane_add_sprite (main_sprite *, BOOL);

#endif
