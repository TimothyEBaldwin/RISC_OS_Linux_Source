/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/* Title:   auxiliary.h
 * Purpose: support functions for the ColourDbox object class
 * Author:  TGR
 * History: 10-Mar-94: TGR: created
 *
 *
 */

#ifndef __auxiliary_h
#define __auxiliary_h

#include "kernel.h"

#ifndef __toolbox_h
#include "objects.toolbox.h"
#endif

#ifndef __colourdbox_h
#include "objects.colourdbox.h"
#endif

#ifndef __wimp_h
#include "twimp.h"
#endif

#ifndef __mem_h
#include "mem.h"
#endif

#include "object.h"
#include "task.h"

#define mem_freek(A) mem_free(A,"ColourDbox")
#define mem_alloc(A) mem_allocate(A,"ColourDbox")

extern ObjectID               global_menu;
extern ColourDboxInternal    *global_next;

extern EventInterest   menu_messages_of_interest[];

extern EventInterest   normal_messages_of_interest[];

extern EventInterest   events_of_interest[];

extern EventInterest   toolbox_events_of_interest[];

extern _kernel_oserror *dialogue_completed (ObjectID object_id);
extern _kernel_oserror *close_dialogue (ColourDboxInternal *internal, TaskDescriptor *t);
extern _kernel_oserror *dialogue_hidden (ColourDboxInternal *internal);
extern _kernel_oserror *register_task (TaskDescriptor *t);
extern _kernel_oserror *deregister_task (TaskDescriptor *t);
extern ColourDboxInternal *find_internal_d (int dialogue_handle, TaskDescriptor *t);
extern ColourDboxInternal *find_internal_w (int window_handle, TaskDescriptor *t);
_kernel_oserror *show_actual           (void);
extern _kernel_oserror *store_colour_model_block (ColourDboxInternal *internal, ColourModelBlock *colour_model_block, int set_init_block);
extern _kernel_oserror *store_colour_descriptor_block (ColourDboxInternal *internal, ColourDescriptorBlock *colour_desc_block, int set_init_block);
extern _kernel_oserror *reset_colour (ColourDboxInternal *internal);
extern _kernel_oserror *auxiliary_find_size (const char *templatefile);
#endif
