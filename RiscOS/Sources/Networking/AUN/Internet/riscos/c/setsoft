/* Copyright 1996 Acorn Computers Ltd
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Software Interrupt Setup
 *
 * Copyright (c) 1988 Acorn Computers Ltd., Cambridge, England
 *
 */

#include "kernel.h"

#include "sys/param.h"
#include "sys/socket.h"
#include "sys/time.h"

#include "net/netisr.h"

#include "net/if.h"
#include "net/if_arp.h"

#include "netinet/in.h"
#include "netinet/if_ether.h"
#include "netinet/ip_var.h"

#include "module.h"

void softnet(void)
{
	if ((netisr & (1 << NETISR_IP)) != 0) {
		netisr &= ~(1 << NETISR_IP);
		ipintr();
	}

	if ((netisr & (1 << NETISR_ARP)) != 0) {
		netisr &= ~(1 << NETISR_ARP);
		arpintr();
	}

	if ((netisr & (1 << NETISR_REVARP)) != 0) {
		netisr &= ~(1 << NETISR_REVARP);
		revarpintr();
	}

	if ((netisr & (1 << NETISR_CALLO)) != 0) {
		netisr &= ~(1 << NETISR_CALLO);
		callo_handler();
	}
}

extern int callbackflag;
extern int callbackerr;

void setsoftnet(void)
{
    if( callbackflag == 0 )
    {
	int s = splimp();
	callbackflag = 1;
	splx(s);

	if( callback(CALLB_CALLB) != 0 )
	{
	    callbackflag = 0;
	    callbackerr = 1;
	}
    }
}

int callb_handler(int *r)
{
    callback_entered(CALLB_CALLB);

    if( callbackflag != 0 )
    {
	int s = splimp();
	callbackflag = 0;
	splx(s);
	softnet();
    }

#ifdef DELAY_EVENTS
    sendallsignals();
#endif

    return(1);
}

/* EOF setsoft.c */
