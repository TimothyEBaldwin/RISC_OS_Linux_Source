This is experimantial software, there is a good chance it won't work!

It is currenly being discussed on the RISC OS Open website:
https://www.riscosopen.org/forum/forums/3/topics/9068

This Linux port of RISC OS can be built in the traditional fashion as
documented on the RISC OS website. However this wiil not build the SDL
frontend which connects RISC OS to the Linux graphics system, without
it RISC OS is limited to a text only interface.

It should run on ARM Linux system natively, or on other Linux systems
with the aid of a slightly modified QEMU.

The RISC OS "ROM" Image is a Linux executable.

Unlike virtual machines such as RPCEmu, it provides no restriction on
what RISC OS programs can do to the Linux enviroment.

It can also be built on Linux (or other Unix) using the Makefile, which
runs the majority of the build on RISC OS, by default using an binary
of the Linux port that is included with this distruburion and RISC OS
Open Limited's DDE in ../DDE. This can be brought from RISC OS Open
Limited at: https://www.riscosopen.org/content/sales/dde

The following varabiles are accepted by the Makefile:
 TARGET      What to build, such as "IOMD32" for a RiscPC/A7000 ROM image.
 METHOD      How to build, valid values are "rpcemu" and "Linux".
 JOBS        Number of CPUs to use for building.
 LINUX_ROM   Location of Linux RISC OS executable to use for building.
 QEMU        Location of qemu-arm executable.
 PHASES      Space sperarated list of build phases to run.

The following targets are provided by the Makefile:
 build       Build RISC OS (or some other thing).
 check       Build and test RISC OS.
 fast        Runs only rom_install and join phases and tests.

This following items will be download to ~/Downloads if needed:
 - RISC OS 5.22 Disc Archive
 - RISC OS 5.22 IOMD ROM Image
 - RPCEmu 0.8.15
 - QEMU 2.8.0

Linux RISC OS command line options:
  --help         Display help message
  --nvram FILE   Filename for nvram
  --notimers     Disable HAL timers
  --noaborts     Disable aborts - RISC OS will die with SIGSEGV
  --nofork       Dont't fork - for debuging



