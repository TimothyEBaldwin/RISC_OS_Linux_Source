; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
;
 
        MACRO
        CallOS  $entry, $tailcall
        ASSERT  $entry <= HighestOSEntry
 [ "$tailcall"=""
        MOV     lr, pc
 |
   [ "$tailcall"<>"tailcall"
        ! 0, "Unrecognised parameter to CallOS"
   ]
 ]
        LDR     pc, OSentries + 4*$entry
        MEND

sb                      RN 9

                        ^  0,sb
; workspace                        
OSheader                #  4
OSentries               #  4*(HighestOSEntry+1)
IO_Address              #  4
IOMD_Address            #  4
VIDC_Address            #  4
EASI_Address            #  4
C710_Address            #  4
Gemini_Address          #  4
TimerPeriods            #  4*2
HardROMAmount           #  4
IOCRSoftCopy            #  1
IOSystemType            #  1
IOST_Medusa             *  0
IOST_7500               *  1
IsKinetic               #  1
                        #  1

; workspace for RTC
RTCDeviceStruct         #  80

; workspace for video functions
VideoDevice             #  68
VRAMWidth               #  1
CLine_Softcopy          #  1   ; IOMD_CLINES soft copy
VIDCIsAsleep            #  1
                        #  1

; workspace for DMA controller
DMACDeviceStruct        #  (80+4)*1     ; (DMAC + 1 private) * 1 controller
DMABChannelPtrs         #  4*6          ; 6 pointers
DMABChannelStructs      #  (112+16)*6   ; (DMAB + 4 private) * 6 channels

; workspace for IDE controller
IDEDeviceStruct         #  76+4

HAL_WsSize              *  :INDEX:@

        END
