; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
; 
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
; 
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
; 
; objAsm - BASIC VFP Lib Macros
; (C)2011 TBA Software
; 0.01 - 16/06/2011

; ** OP Table Entry **
; $Op must be length 4
; $Ptr points to the first syntax lookup entry for this 4 char code

        MACRO
$Label  VFP_OpTableEntry $Op,$Ptr
$Label  DCB "$Op"
        DCD $Ptr
        MEND

; ** Syntax Lookup **
; $DataTypeList, $AlignList, $ParamsTable can be 0 when not used

VFP_syn          EQU 10
VFP_syn_pattern  EQU 0
VFP_syn_encoding EQU 2
VFP_syn_datatype EQU 4
VFP_syn_align    EQU 6
VFP_syn_params   EQU 8

        MACRO
$Label  VFP_SyntaxLookup $Pattern, $Encoding, $DataTypeList, $AlignList, $ParamsTable
$Label  DCW $Pattern
        DCW $Encoding
        DCW $DataTypeList
        DCW $AlignList
        DCW $ParamsTable
        MEND

; ** Syntax String **

        MACRO
$Label  VFP_Pattern $Pattern
$Label  DCB "$Pattern"
        DCB 0
        MEND

; ** Data-Type List Entry **
; $DT is one of S/U/I/F        (P is not currently used here)
; $DTSizeStr must be length 2  (pad with space)

        MACRO
$Label  VFP_DataTypeListEntry $DT,$DTSizeStr,$DTSize
$Label  DCB "$DT"
        DCB "$DTSizeStr"
        DCB $DTSize
        MEND

; ** Alignment List **
; followed by $Variations number of alignment list entries
; (1 = one for all data-types, >1 = 1 per datatype)

        MACRO
$Label  VFP_AlignList $Variations
$Label  DCD $Variations
        MEND

; ** Alignment List Entry **
;$Align     = size of alignment
;$AlignBits = encoding

        MACRO
$Label  VFP_AlignListEntry $Align,$AlignBits
$Label  DCW $Align
        DCB $AlignBits
        DCB 0
        MEND

; ** Params List **
; opnumber is VFP_Op_ prefixed constant
; bitfields is the number of bitfield records that follow
; (more than 1 indicates one per data-type)

VFP_par           EQU 4
VFP_par_opnumber  EQU 0
VFP_par_bitfields EQU 1

        MACRO
$Label  VFP_ParamsList $OpNumber, $Bitfields
$Label  DCB $OpNumber
        DCB $Bitfields
        DCB 0
        DCB 0
        MEND

; ** Bitfield Record **
; when args is 0 - followed by bit-field args

VFP_bf          EQU 8
VFP_bfshift     EQU 3
VFP_bf_constant EQU 0
VFP_bf_args     EQU 4

        MACRO
$Label  VFP_BitFieldRecord $Constant,$Args
$Label  DCD $Constant
        DCD $Args
        MEND

; ** Bit Field Argument **

VFP_bfa          EQU 4
VFP_bfa_opnumber EQU 0
VFP_bfa_bitmask  EQU 1
VFP_bfa_shift    EQU 2

        MACRO
$Label  VFP_BitFieldArgs $OpNumber, $BitMask, $Shift
$Label  DCB $OpNumber
        DCB $BitMask
        DCB $Shift
        DCB 0
        MEND

; ** Encoding **
; followed by bit-field record/args containing encoding data
; $OPCModeList = 0 when not used

VFP_Enc_Flag_VFPv2  EQU 1
VFP_Enc_Flag_VFPv3  EQU 2
VFP_Enc_Flag_VFPv4  EQU 4
VFP_Enc_Flag_SIMDv1 EQU 8
VFP_Enc_Flag_SIMDv2 EQU 16
VFP_Enc_Flag_ARMv8  EQU 32
VFP_Enc_Flag_VFPv3H EQU 64

VFP_enc             EQU 4
VFP_enc_flags       EQU 0
VFP_enc_opcmodelist EQU 2

        MACRO
$Label  VFP_Encoding $Flags, $OPCModeList
$Label  DCW $Flags
        DCW $OPCModeList
        MEND

; ** OPCMode List Entry **
; $BitPattern is a 5 char string of 0,1 or 'x' (meaning either 0 or 1)

        MACRO
$Label  VFP_OPCModeListEntry $BitPattern
$Label  DCB "$BitPattern"
        DCB 0,0,0
        MEND

        END
