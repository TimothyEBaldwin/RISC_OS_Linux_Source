; This source code in this file is licensed to You by Castle Technology
; Limited ("Castle") and its licensors on contractual terms and conditions
; ("Licence") which entitle you freely to modify and/or to distribute this
; source code subject to Your compliance with the terms of the Licence.
;
; This source code has been made available to You without any warranties
; whatsoever. Consequently, Your use, modification and distribution of this
; source code is entirely at Your own risk and neither Castle, its licensors
; nor any other person who has contributed to this source code shall be
; liable to You for any loss or damage which You may suffer as a result of
; Your use, modification or distribution of this source code.
;
; Full details of Your rights and obligations are set out in the Licence.
; You should have received a copy of the Licence with this source code file.
; If You have not received a copy, the text of the Licence is available
; online at www.castle-technology.co.uk/riscosbaselicence.htm
;

        GET     Hdr:ListOpts
        GET     Hdr:Macros
        GET     Hdr:System
        GET     Hdr:CPU.Arch
        GET     Hdr:Machine.<Machine>
        GET     Hdr:HALSize.<HALSize>
        GET     Hdr:ImageSize.<ImageSize>
        GET     Hdr:UserIF.<UserIF>
        $GetCPU
        $GetIO
        $GetMEMC
        $GetMEMM
        $GetVIDC

        GET     hdr.Options
        GET     Hdr:Sprite
        GET     Hdr:VduExt
        GET     Hdr:PublicWS
        GET     Hdr:KernelWS
        GET     Hdr:OSMem

        MACRO
        DEFINE  $name
        DCB     "#define $name (0x", :STR:($name), ")" , 10
        MEND

        MACRO
        ZP      $type, $name
        DCB     "#define $name (*($type *)(ZeroPage + 0x", :STR:($name), "))" , 10
        MEND

        ;MACRO
        ;HAL     $rtype, $rout, $args
        ;DCB     "typedef $rtype (*$rout", "_t)($args);", 10
        ;DCB     "#define $rout (($rout", "_t)0x", :STR:(HALWorkspace - 4 * (EntryNo_$rout + 1)), ")", 10
        ;MEND
        ;HAL     "void", "HAL_Init", "unsigned int *riscos_header, void *unacheable_ws"

        AREA    Header, DATA, READONLY

        DCB     "#ifndef KERNEL_H", 10
        DCB     "#define KERNEL_H", 10

        DEFINE  ZeroPage
        DEFINE  ScratchSpace
        DEFINE  ScratchSpaceSize

        DEFINE  CursorChunkAddress
        DEFINE  TopOfDMAWorkSpace

        DEFINE  AplWorkMaxSize

        ZP      uint32_t, RAMLIMIT
        ZP      uint32_t, AplWorkSize
        ZP      uint32_t, MemLimit

        ASSERT  DANode_Link = 0 ; because DAList has only link
        ZP      "struct DANode*", DAList
        ZP      "struct DANode", AppSpaceDANode
        ZP      "struct DANode", FreePoolDANode
        ZP      uint32_t, CDASemaphore

        DCB     "#endif", 10

        WHILE   ((. - Header) :AND: 3) != 0
        DCB     10
        WEND

        END
