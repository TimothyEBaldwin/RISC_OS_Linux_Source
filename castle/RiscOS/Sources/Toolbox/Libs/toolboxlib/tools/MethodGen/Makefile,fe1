# This source code in this file is licensed to You by Castle Technology
# Limited ("Castle") and its licensors on contractual terms and conditions
# ("Licence") which entitle you freely to modify and/or to distribute this
# source code subject to Your compliance with the terms of the Licence.
# 
# This source code has been made available to You without any warranties
# whatsoever. Consequently, Your use, modification and distribution of this
# source code is entirely at Your own risk and neither Castle, its licensors
# nor any other person who has contributed to this source code shall be
# liable to You for any loss or damage which You may suffer as a result of
# Your use, modification or distribution of this source code.
# 
# Full details of Your rights and obligations are set out in the Licence.
# You should have received a copy of the Licence with this source code file.
# If You have not received a copy, the text of the Licence is available
# online at www.castle-technology.co.uk/riscosbaselicence.htm
# 
# Project:   MethodGen


# Toolflags:
CCflags = -c -depend !Depend -IC: -throwback 
C++flags = -c -depend !Depend -throwback -IC:
Pascalflags = -c -depend !Depend -throwback -IP:
Linkflags = -aif -c++ -o $@ 
ObjAsmflags = -depend !Depend -ThrowBack -Stamp -quit -CloseExec
CMHGflags = 
LibFileflags = -c -o $@
Squeezeflags = -o $@
AAsmflags = -depend !Depend -quit -CloseExec -To $@ -From


# Final targets:
@.!MethodGen.!RunImage:   @.o.main c:o.risc_oslib c:o.stubs @.o.addmethod \
        @.o.newclass @.o.methodlist @.o.file @.o.datafile @.o.codegen @.o.defmodgen 
        Link $(Linkflags) @.o.main c:o.risc_oslib c:o.stubs @.o.addmethod \
        @.o.newclass @.o.methodlist @.o.file @.o.datafile @.o.codegen @.o.defmodgen 


# User-editable dependencies:


# Static dependencies:
@.o.main:   @.c.main
        cc $(ccflags) -o @.o.main @.c.main 
@.o.addmethod:   @.c.addmethod
        cc $(ccflags) -o @.o.addmethod @.c.addmethod 
@.o.newclass:   @.c.newclass
        cc $(ccflags) -o @.o.newclass @.c.newclass 
@.o.methodlist:   @.c.methodlist
        cc $(ccflags) -o @.o.methodlist @.c.methodlist 
@.o.file:   @.c.file
        cc $(ccflags) -o @.o.file @.c.file 
@.o.datafile:   @.c.datafile
        cc $(ccflags) -o @.o.datafile @.c.datafile 
@.o.codegen:   @.c.codegen
        cc $(ccflags) -o @.o.codegen @.c.codegen 
@.o.defmodgen:   @.c.defmodgen
        cc $(ccflags) -o @.o.defmodgen @.c.defmodgen 


# Dynamic dependencies:
